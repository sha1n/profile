#!/usr/bin/env zsh

source "$SHA1N_PROFILE_HOME/scripts/lib.zsh"

# runs mtime based cleanup on the bazel disk-cache directory.
function bazel_with_disk_cache_guard() {
  ("$BAZEL_BIN_PATH" "$@")
  local rc="$?"

  (find "$BAZEL_DISK_CACHE_DIR" -type f -mtime +$BAZEL_DISK_CACHE_MAX_AGE -delete &)
  if [[ "$?" != "0" ]]; then
    __profile_log_warn "[${funcstack[1]}] disk cache cleanup failed"
  fi

  return "$rc"
}

#
# searches the current path for a '.start' file and sources it if found. Otherwise prints an error.
#
function start() {
  local dir="$PWD"
  while [[ ! -f "./.start" ]]
  do 
    if [[ "$PWD" == "/" ]]; then 
      break
    fi
    cd ..
  done

  if [[ -f "./.start" ]]; then 
    source "./.start"
  else
    __profile_log_error "no '.start' file could be found in the current directory tree"
  fi

  cd "$dir"
}

#
# searches for the nearest jest and executes it in the current directory.
#
function jest() {
  local pwd="$PWD"
  local dir="$PWD"
  while [[ ! -f "node_modules/jest/bin/jest.js" ]]
  do 
    if [[ "$PWD" == "/" ]]; then 
      break
    fi
    dir="$dir/.."
    cd ..
  done

  if [[ -f "node_modules/jest/bin/jest.js" ]]; then 
    cd "$pwd"
    node "$dir/node_modules/jest/bin/jest.js"
  else
    cd "$pwd"
    __profile_log_error "couldn't find jest in the current directory tree"
  fi
}