#!/usr/bin/env zsh

source "$SHA1N_PROFILE_HOME/scripts/lib.zsh"


function toupper() {
  echo "$1" | tr a-z A-Z
}

function tolower() {
  echo "$1" | tr A-Z a-z
}

#
# Executes 'bazel' with the specified arguments and runs an async mtime based cleanup command on the
# bazel disk-cache directory when the command exists.
#
function bazel_with_disk_cache_guard() {
  ("$BAZEL_BIN_PATH" "$@")
  local rc="$?"

  (find "$BAZEL_DISK_CACHE_DIR" -type f -mtime +$BAZEL_DISK_CACHE_MAX_AGE -delete &)
  if [[ "$?" != "0" ]]; then
    __profile_log_warn "[${funcstack[1]}] disk cache cleanup failed"
  fi

  return "$rc"
}

#
# Searches the current directory path for a '.start' file and sources it if found. Otherwise prints an error.
#
function start() {
  local start_path=$(__profile_search_ancestor_tree ".start")
  if [[ "$start_path" != "" ]]; then
    source "$start_path"
  else
    __profile_log_error "no '.start' file could be found in the current directory tree"
  fi
}

#
# Searches for the nearest jest and executes it in the current directory.
#
function jest() {
  local jest_path=$(__profile_search_ancestor_tree "node_modules/jest/bin/jest.js")
  if [[ "$jest_path" != "" ]]; then
    node "$jest_path" "$@"
  else
    __profile_log_error "couldn't find jest in the current directory tree"
  fi
}
